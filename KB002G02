Lesson 002: The Index

Git requires that changes are marked explicitly for the next commit. For
example, if you make a change in a file and think that this change is relevant
for the next commit, you have to add the file to the so-called "staging index"
via the 'git add <file>' command. The staging index will be a complete 
representation of the changes you intend to commit.

Here's an example of what "git status" will show if after "git add my_*file.c" ...

    # On branch master
    # Your branch is ahead of 'origin/master' by 1 commit.
    #
    # Changes to be committed:
    #   (use "git reset HEAD <file>..." to unstage)
    #
    #   new file:   my_new_file.c   <--- EVERYTHING IN HERE IS IN THE STAGING INDEX
    #   modified:   my_mod_file.c   <--- EVERYTHING IN HERE IS IN THE STAGING INDEX
    #
    # Changed but not updated:
    #   (use "git add <file>..." to update what will be committed)
    #   (use "git checkout -- <file>..." to discard changes in working directory)
    #
    #   modified:   test/still_working_on_this_file.pl
    #
    # Untracked files:
    #   (use "git add <file>..." to include in what will be committed)
    #
    #   file_i_care_not_to_track.c

When you run the command "git commit" whatever you see in the index will
be permanently stored at that unique commit, always retreivable for all time.

REMEMBER: IF IT'S NOT STAGED IN THE INDEX, IT WILL NOT BE COMMITTED.

